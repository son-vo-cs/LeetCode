1) for count frequency of character, we could create a int[128] and then arry[char]++, don't have to convert anything

2) if we need to coung frequency of 2 arrays, why not use 1 hash map and count + and -

3) if our function(a,b) only works if a >b, then first line of function return (b,a) if a <b : https://leetcode.com/problems/intersection-of-two-arrays-ii/submissions/

4) BITS:
    flip bit = xor = a^1
    if we want to flip all bits=> flip ^ 1, then move 1 << 1, flip again
    Integer to string bit: Integer.toString(num,2)
    Integer count bit: Integer.bitCount(n)
    
5: DYNAMIC: if we cannot form an arrar dp[num], or dp[fromi][toj] => try think different way or not dp or greedy. And dynamic is a hard version of greedy


